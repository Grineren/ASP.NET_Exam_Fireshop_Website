#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FireShop")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertAdmin(Admin instance);
  partial void UpdateAdmin(Admin instance);
  partial void DeleteAdmin(Admin instance);
  partial void InsertVare(Vare instance);
  partial void UpdateVare(Vare instance);
  partial void DeleteVare(Vare instance);
  partial void InsertBilleder(Billeder instance);
  partial void UpdateBilleder(Billeder instance);
  partial void DeleteBilleder(Billeder instance);
  partial void InsertForside(Forside instance);
  partial void UpdateForside(Forside instance);
  partial void DeleteForside(Forside instance);
  partial void InsertKategorier(Kategorier instance);
  partial void UpdateKategorier(Kategorier instance);
  partial void DeleteKategorier(Kategorier instance);
  partial void InsertKontakt(Kontakt instance);
  partial void UpdateKontakt(Kontakt instance);
  partial void DeleteKontakt(Kontakt instance);
  partial void InsertMaerke(Maerke instance);
  partial void UpdateMaerke(Maerke instance);
  partial void DeleteMaerke(Maerke instance);
  partial void InsertNyheder(Nyheder instance);
  partial void UpdateNyheder(Nyheder instance);
  partial void DeleteNyheder(Nyheder instance);
  partial void InsertTilbud(Tilbud instance);
  partial void UpdateTilbud(Tilbud instance);
  partial void DeleteTilbud(Tilbud instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["FireShopConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Admin> Admins
	{
		get
		{
			return this.GetTable<Admin>();
		}
	}
	
	public System.Data.Linq.Table<Vare> Vares
	{
		get
		{
			return this.GetTable<Vare>();
		}
	}
	
	public System.Data.Linq.Table<Billeder> Billeders
	{
		get
		{
			return this.GetTable<Billeder>();
		}
	}
	
	public System.Data.Linq.Table<Forside> Forsides
	{
		get
		{
			return this.GetTable<Forside>();
		}
	}
	
	public System.Data.Linq.Table<Kategorier> Kategoriers
	{
		get
		{
			return this.GetTable<Kategorier>();
		}
	}
	
	public System.Data.Linq.Table<Kontakt> Kontakts
	{
		get
		{
			return this.GetTable<Kontakt>();
		}
	}
	
	public System.Data.Linq.Table<Maerke> Maerkes
	{
		get
		{
			return this.GetTable<Maerke>();
		}
	}
	
	public System.Data.Linq.Table<Nyheder> Nyheders
	{
		get
		{
			return this.GetTable<Nyheder>();
		}
	}
	
	public System.Data.Linq.Table<Tilbud> Tilbuds
	{
		get
		{
			return this.GetTable<Tilbud>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _A_Id;
	
	private string _Brugernavn;
	
	private string _Kodeord;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnA_IdChanging(int value);
    partial void OnA_IdChanged();
    partial void OnBrugernavnChanging(string value);
    partial void OnBrugernavnChanged();
    partial void OnKodeordChanging(string value);
    partial void OnKodeordChanged();
    #endregion
	
	public Admin()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int A_Id
	{
		get
		{
			return this._A_Id;
		}
		set
		{
			if ((this._A_Id != value))
			{
				this.OnA_IdChanging(value);
				this.SendPropertyChanging();
				this._A_Id = value;
				this.SendPropertyChanged("A_Id");
				this.OnA_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brugernavn", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Brugernavn
	{
		get
		{
			return this._Brugernavn;
		}
		set
		{
			if ((this._Brugernavn != value))
			{
				this.OnBrugernavnChanging(value);
				this.SendPropertyChanging();
				this._Brugernavn = value;
				this.SendPropertyChanged("Brugernavn");
				this.OnBrugernavnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kodeord", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Kodeord
	{
		get
		{
			return this._Kodeord;
		}
		set
		{
			if ((this._Kodeord != value))
			{
				this.OnKodeordChanging(value);
				this.SendPropertyChanging();
				this._Kodeord = value;
				this.SendPropertyChanged("Kodeord");
				this.OnKodeordChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vare")]
public partial class Vare : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _V_Id;
	
	private string _Navn;
	
	private int _Pris;
	
	private string _Beskrivelse;
	
	private int _Fk_BilledeId;
	
	private int _Fk_KategoriId;
	
	private int _Fk_MaerkeId;
	
	private EntitySet<Tilbud> _Tilbuds;
	
	private EntityRef<Billeder> _Billeder;
	
	private EntityRef<Kategorier> _Kategorier;
	
	private EntityRef<Maerke> _Maerke;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnV_IdChanging(int value);
    partial void OnV_IdChanged();
    partial void OnNavnChanging(string value);
    partial void OnNavnChanged();
    partial void OnPrisChanging(int value);
    partial void OnPrisChanged();
    partial void OnBeskrivelseChanging(string value);
    partial void OnBeskrivelseChanged();
    partial void OnFk_BilledeIdChanging(int value);
    partial void OnFk_BilledeIdChanged();
    partial void OnFk_KategoriIdChanging(int value);
    partial void OnFk_KategoriIdChanged();
    partial void OnFk_MaerkeIdChanging(int value);
    partial void OnFk_MaerkeIdChanged();
    #endregion
	
	public Vare()
	{
		this._Tilbuds = new EntitySet<Tilbud>(new Action<Tilbud>(this.attach_Tilbuds), new Action<Tilbud>(this.detach_Tilbuds));
		this._Billeder = default(EntityRef<Billeder>);
		this._Kategorier = default(EntityRef<Kategorier>);
		this._Maerke = default(EntityRef<Maerke>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int V_Id
	{
		get
		{
			return this._V_Id;
		}
		set
		{
			if ((this._V_Id != value))
			{
				this.OnV_IdChanging(value);
				this.SendPropertyChanging();
				this._V_Id = value;
				this.SendPropertyChanged("V_Id");
				this.OnV_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Navn", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Navn
	{
		get
		{
			return this._Navn;
		}
		set
		{
			if ((this._Navn != value))
			{
				this.OnNavnChanging(value);
				this.SendPropertyChanging();
				this._Navn = value;
				this.SendPropertyChanged("Navn");
				this.OnNavnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pris", DbType="Int NOT NULL")]
	public int Pris
	{
		get
		{
			return this._Pris;
		}
		set
		{
			if ((this._Pris != value))
			{
				this.OnPrisChanging(value);
				this.SendPropertyChanging();
				this._Pris = value;
				this.SendPropertyChanged("Pris");
				this.OnPrisChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beskrivelse", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string Beskrivelse
	{
		get
		{
			return this._Beskrivelse;
		}
		set
		{
			if ((this._Beskrivelse != value))
			{
				this.OnBeskrivelseChanging(value);
				this.SendPropertyChanging();
				this._Beskrivelse = value;
				this.SendPropertyChanged("Beskrivelse");
				this.OnBeskrivelseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fk_BilledeId", DbType="Int NOT NULL")]
	public int Fk_BilledeId
	{
		get
		{
			return this._Fk_BilledeId;
		}
		set
		{
			if ((this._Fk_BilledeId != value))
			{
				if (this._Billeder.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFk_BilledeIdChanging(value);
				this.SendPropertyChanging();
				this._Fk_BilledeId = value;
				this.SendPropertyChanged("Fk_BilledeId");
				this.OnFk_BilledeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fk_KategoriId", DbType="Int NOT NULL")]
	public int Fk_KategoriId
	{
		get
		{
			return this._Fk_KategoriId;
		}
		set
		{
			if ((this._Fk_KategoriId != value))
			{
				if (this._Kategorier.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFk_KategoriIdChanging(value);
				this.SendPropertyChanging();
				this._Fk_KategoriId = value;
				this.SendPropertyChanged("Fk_KategoriId");
				this.OnFk_KategoriIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fk_MaerkeId", DbType="Int NOT NULL")]
	public int Fk_MaerkeId
	{
		get
		{
			return this._Fk_MaerkeId;
		}
		set
		{
			if ((this._Fk_MaerkeId != value))
			{
				if (this._Maerke.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFk_MaerkeIdChanging(value);
				this.SendPropertyChanging();
				this._Fk_MaerkeId = value;
				this.SendPropertyChanged("Fk_MaerkeId");
				this.OnFk_MaerkeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vare_Tilbud", Storage="_Tilbuds", ThisKey="V_Id", OtherKey="Fk_VareId")]
	public EntitySet<Tilbud> Tilbuds
	{
		get
		{
			return this._Tilbuds;
		}
		set
		{
			this._Tilbuds.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Billeder_Vare", Storage="_Billeder", ThisKey="Fk_BilledeId", OtherKey="B_Id", IsForeignKey=true)]
	public Billeder Billeder
	{
		get
		{
			return this._Billeder.Entity;
		}
		set
		{
			Billeder previousValue = this._Billeder.Entity;
			if (((previousValue != value) 
						|| (this._Billeder.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Billeder.Entity = null;
					previousValue.Vares.Remove(this);
				}
				this._Billeder.Entity = value;
				if ((value != null))
				{
					value.Vares.Add(this);
					this._Fk_BilledeId = value.B_Id;
				}
				else
				{
					this._Fk_BilledeId = default(int);
				}
				this.SendPropertyChanged("Billeder");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategorier_Vare", Storage="_Kategorier", ThisKey="Fk_KategoriId", OtherKey="K_Id", IsForeignKey=true)]
	public Kategorier Kategorier
	{
		get
		{
			return this._Kategorier.Entity;
		}
		set
		{
			Kategorier previousValue = this._Kategorier.Entity;
			if (((previousValue != value) 
						|| (this._Kategorier.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Kategorier.Entity = null;
					previousValue.Vares.Remove(this);
				}
				this._Kategorier.Entity = value;
				if ((value != null))
				{
					value.Vares.Add(this);
					this._Fk_KategoriId = value.K_Id;
				}
				else
				{
					this._Fk_KategoriId = default(int);
				}
				this.SendPropertyChanged("Kategorier");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maerke_Vare", Storage="_Maerke", ThisKey="Fk_MaerkeId", OtherKey="M_Id", IsForeignKey=true)]
	public Maerke Maerke
	{
		get
		{
			return this._Maerke.Entity;
		}
		set
		{
			Maerke previousValue = this._Maerke.Entity;
			if (((previousValue != value) 
						|| (this._Maerke.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Maerke.Entity = null;
					previousValue.Vares.Remove(this);
				}
				this._Maerke.Entity = value;
				if ((value != null))
				{
					value.Vares.Add(this);
					this._Fk_MaerkeId = value.M_Id;
				}
				else
				{
					this._Fk_MaerkeId = default(int);
				}
				this.SendPropertyChanged("Maerke");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Tilbuds(Tilbud entity)
	{
		this.SendPropertyChanging();
		entity.Vare = this;
	}
	
	private void detach_Tilbuds(Tilbud entity)
	{
		this.SendPropertyChanging();
		entity.Vare = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Billeder")]
public partial class Billeder : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _B_Id;
	
	private string _Sti;
	
	private EntitySet<Vare> _Vares;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnB_IdChanging(int value);
    partial void OnB_IdChanged();
    partial void OnStiChanging(string value);
    partial void OnStiChanged();
    #endregion
	
	public Billeder()
	{
		this._Vares = new EntitySet<Vare>(new Action<Vare>(this.attach_Vares), new Action<Vare>(this.detach_Vares));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int B_Id
	{
		get
		{
			return this._B_Id;
		}
		set
		{
			if ((this._B_Id != value))
			{
				this.OnB_IdChanging(value);
				this.SendPropertyChanging();
				this._B_Id = value;
				this.SendPropertyChanged("B_Id");
				this.OnB_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sti", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Sti
	{
		get
		{
			return this._Sti;
		}
		set
		{
			if ((this._Sti != value))
			{
				this.OnStiChanging(value);
				this.SendPropertyChanging();
				this._Sti = value;
				this.SendPropertyChanged("Sti");
				this.OnStiChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Billeder_Vare", Storage="_Vares", ThisKey="B_Id", OtherKey="Fk_BilledeId")]
	public EntitySet<Vare> Vares
	{
		get
		{
			return this._Vares;
		}
		set
		{
			this._Vares.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Vares(Vare entity)
	{
		this.SendPropertyChanging();
		entity.Billeder = this;
	}
	
	private void detach_Vares(Vare entity)
	{
		this.SendPropertyChanging();
		entity.Billeder = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Forside")]
public partial class Forside : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _F_Id;
	
	private string _Tekst;
	
	private string _Billede;
	
	private string _Overskrift;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnF_IdChanging(int value);
    partial void OnF_IdChanged();
    partial void OnTekstChanging(string value);
    partial void OnTekstChanged();
    partial void OnBilledeChanging(string value);
    partial void OnBilledeChanged();
    partial void OnOverskriftChanging(string value);
    partial void OnOverskriftChanged();
    #endregion
	
	public Forside()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int F_Id
	{
		get
		{
			return this._F_Id;
		}
		set
		{
			if ((this._F_Id != value))
			{
				this.OnF_IdChanging(value);
				this.SendPropertyChanging();
				this._F_Id = value;
				this.SendPropertyChanged("F_Id");
				this.OnF_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tekst", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string Tekst
	{
		get
		{
			return this._Tekst;
		}
		set
		{
			if ((this._Tekst != value))
			{
				this.OnTekstChanging(value);
				this.SendPropertyChanging();
				this._Tekst = value;
				this.SendPropertyChanged("Tekst");
				this.OnTekstChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Billede", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Billede
	{
		get
		{
			return this._Billede;
		}
		set
		{
			if ((this._Billede != value))
			{
				this.OnBilledeChanging(value);
				this.SendPropertyChanging();
				this._Billede = value;
				this.SendPropertyChanged("Billede");
				this.OnBilledeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overskrift", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Overskrift
	{
		get
		{
			return this._Overskrift;
		}
		set
		{
			if ((this._Overskrift != value))
			{
				this.OnOverskriftChanging(value);
				this.SendPropertyChanging();
				this._Overskrift = value;
				this.SendPropertyChanged("Overskrift");
				this.OnOverskriftChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kategorier")]
public partial class Kategorier : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _K_Id;
	
	private string _Kategori;
	
	private EntitySet<Vare> _Vares;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnK_IdChanging(int value);
    partial void OnK_IdChanged();
    partial void OnKategoriChanging(string value);
    partial void OnKategoriChanged();
    #endregion
	
	public Kategorier()
	{
		this._Vares = new EntitySet<Vare>(new Action<Vare>(this.attach_Vares), new Action<Vare>(this.detach_Vares));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_K_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int K_Id
	{
		get
		{
			return this._K_Id;
		}
		set
		{
			if ((this._K_Id != value))
			{
				this.OnK_IdChanging(value);
				this.SendPropertyChanging();
				this._K_Id = value;
				this.SendPropertyChanged("K_Id");
				this.OnK_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kategori", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Kategori
	{
		get
		{
			return this._Kategori;
		}
		set
		{
			if ((this._Kategori != value))
			{
				this.OnKategoriChanging(value);
				this.SendPropertyChanging();
				this._Kategori = value;
				this.SendPropertyChanged("Kategori");
				this.OnKategoriChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategorier_Vare", Storage="_Vares", ThisKey="K_Id", OtherKey="Fk_KategoriId")]
	public EntitySet<Vare> Vares
	{
		get
		{
			return this._Vares;
		}
		set
		{
			this._Vares.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Vares(Vare entity)
	{
		this.SendPropertyChanging();
		entity.Kategorier = this;
	}
	
	private void detach_Vares(Vare entity)
	{
		this.SendPropertyChanging();
		entity.Kategorier = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kontakt")]
public partial class Kontakt : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _K_Id;
	
	private string _Navn;
	
	private string _Adresse;
	
	private string _PostnrOgBy;
	
	private string _Tlf;
	
	private string _Mail;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnK_IdChanging(int value);
    partial void OnK_IdChanged();
    partial void OnNavnChanging(string value);
    partial void OnNavnChanged();
    partial void OnAdresseChanging(string value);
    partial void OnAdresseChanged();
    partial void OnPostnrOgByChanging(string value);
    partial void OnPostnrOgByChanged();
    partial void OnTlfChanging(string value);
    partial void OnTlfChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    #endregion
	
	public Kontakt()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_K_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int K_Id
	{
		get
		{
			return this._K_Id;
		}
		set
		{
			if ((this._K_Id != value))
			{
				this.OnK_IdChanging(value);
				this.SendPropertyChanging();
				this._K_Id = value;
				this.SendPropertyChanged("K_Id");
				this.OnK_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Navn", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Navn
	{
		get
		{
			return this._Navn;
		}
		set
		{
			if ((this._Navn != value))
			{
				this.OnNavnChanging(value);
				this.SendPropertyChanging();
				this._Navn = value;
				this.SendPropertyChanged("Navn");
				this.OnNavnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresse", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Adresse
	{
		get
		{
			return this._Adresse;
		}
		set
		{
			if ((this._Adresse != value))
			{
				this.OnAdresseChanging(value);
				this.SendPropertyChanging();
				this._Adresse = value;
				this.SendPropertyChanged("Adresse");
				this.OnAdresseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostnrOgBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string PostnrOgBy
	{
		get
		{
			return this._PostnrOgBy;
		}
		set
		{
			if ((this._PostnrOgBy != value))
			{
				this.OnPostnrOgByChanging(value);
				this.SendPropertyChanging();
				this._PostnrOgBy = value;
				this.SendPropertyChanged("PostnrOgBy");
				this.OnPostnrOgByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tlf", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Tlf
	{
		get
		{
			return this._Tlf;
		}
		set
		{
			if ((this._Tlf != value))
			{
				this.OnTlfChanging(value);
				this.SendPropertyChanging();
				this._Tlf = value;
				this.SendPropertyChanged("Tlf");
				this.OnTlfChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Mail
	{
		get
		{
			return this._Mail;
		}
		set
		{
			if ((this._Mail != value))
			{
				this.OnMailChanging(value);
				this.SendPropertyChanging();
				this._Mail = value;
				this.SendPropertyChanged("Mail");
				this.OnMailChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Maerke")]
public partial class Maerke : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _M_Id;
	
	private string _Brand;
	
	private int _Fk_KategoriId;
	
	private string _Billede;
	
	private string _Beskrivelse;
	
	private EntitySet<Vare> _Vares;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnM_IdChanging(int value);
    partial void OnM_IdChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnFk_KategoriIdChanging(int value);
    partial void OnFk_KategoriIdChanged();
    partial void OnBilledeChanging(string value);
    partial void OnBilledeChanged();
    partial void OnBeskrivelseChanging(string value);
    partial void OnBeskrivelseChanged();
    #endregion
	
	public Maerke()
	{
		this._Vares = new EntitySet<Vare>(new Action<Vare>(this.attach_Vares), new Action<Vare>(this.detach_Vares));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int M_Id
	{
		get
		{
			return this._M_Id;
		}
		set
		{
			if ((this._M_Id != value))
			{
				this.OnM_IdChanging(value);
				this.SendPropertyChanging();
				this._M_Id = value;
				this.SendPropertyChanged("M_Id");
				this.OnM_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fk_KategoriId", DbType="Int NOT NULL")]
	public int Fk_KategoriId
	{
		get
		{
			return this._Fk_KategoriId;
		}
		set
		{
			if ((this._Fk_KategoriId != value))
			{
				this.OnFk_KategoriIdChanging(value);
				this.SendPropertyChanging();
				this._Fk_KategoriId = value;
				this.SendPropertyChanged("Fk_KategoriId");
				this.OnFk_KategoriIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Billede", DbType="NVarChar(MAX)")]
	public string Billede
	{
		get
		{
			return this._Billede;
		}
		set
		{
			if ((this._Billede != value))
			{
				this.OnBilledeChanging(value);
				this.SendPropertyChanging();
				this._Billede = value;
				this.SendPropertyChanged("Billede");
				this.OnBilledeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beskrivelse", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Beskrivelse
	{
		get
		{
			return this._Beskrivelse;
		}
		set
		{
			if ((this._Beskrivelse != value))
			{
				this.OnBeskrivelseChanging(value);
				this.SendPropertyChanging();
				this._Beskrivelse = value;
				this.SendPropertyChanged("Beskrivelse");
				this.OnBeskrivelseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maerke_Vare", Storage="_Vares", ThisKey="M_Id", OtherKey="Fk_MaerkeId")]
	public EntitySet<Vare> Vares
	{
		get
		{
			return this._Vares;
		}
		set
		{
			this._Vares.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Vares(Vare entity)
	{
		this.SendPropertyChanging();
		entity.Maerke = this;
	}
	
	private void detach_Vares(Vare entity)
	{
		this.SendPropertyChanging();
		entity.Maerke = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nyheder")]
public partial class Nyheder : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _N_Id;
	
	private string _Overskrift;
	
	private System.DateTime _Dato;
	
	private string _Tekst;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnN_IdChanging(int value);
    partial void OnN_IdChanged();
    partial void OnOverskriftChanging(string value);
    partial void OnOverskriftChanged();
    partial void OnDatoChanging(System.DateTime value);
    partial void OnDatoChanged();
    partial void OnTekstChanging(string value);
    partial void OnTekstChanged();
    #endregion
	
	public Nyheder()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int N_Id
	{
		get
		{
			return this._N_Id;
		}
		set
		{
			if ((this._N_Id != value))
			{
				this.OnN_IdChanging(value);
				this.SendPropertyChanging();
				this._N_Id = value;
				this.SendPropertyChanged("N_Id");
				this.OnN_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overskrift", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Overskrift
	{
		get
		{
			return this._Overskrift;
		}
		set
		{
			if ((this._Overskrift != value))
			{
				this.OnOverskriftChanging(value);
				this.SendPropertyChanging();
				this._Overskrift = value;
				this.SendPropertyChanged("Overskrift");
				this.OnOverskriftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dato", DbType="DateTime NOT NULL")]
	public System.DateTime Dato
	{
		get
		{
			return this._Dato;
		}
		set
		{
			if ((this._Dato != value))
			{
				this.OnDatoChanging(value);
				this.SendPropertyChanging();
				this._Dato = value;
				this.SendPropertyChanged("Dato");
				this.OnDatoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tekst", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string Tekst
	{
		get
		{
			return this._Tekst;
		}
		set
		{
			if ((this._Tekst != value))
			{
				this.OnTekstChanging(value);
				this.SendPropertyChanging();
				this._Tekst = value;
				this.SendPropertyChanged("Tekst");
				this.OnTekstChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tilbud")]
public partial class Tilbud : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _T_Id;
	
	private int _TildbudPct;
	
	private int _Fk_VareId;
	
	private System.DateTime _SlutDato;
	
	private System.DateTime _StartDato;
	
	private EntityRef<Vare> _Vare;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnT_IdChanging(int value);
    partial void OnT_IdChanged();
    partial void OnTildbudPctChanging(int value);
    partial void OnTildbudPctChanged();
    partial void OnFk_VareIdChanging(int value);
    partial void OnFk_VareIdChanged();
    partial void OnSlutDatoChanging(System.DateTime value);
    partial void OnSlutDatoChanged();
    partial void OnStartDatoChanging(System.DateTime value);
    partial void OnStartDatoChanged();
    #endregion
	
	public Tilbud()
	{
		this._Vare = default(EntityRef<Vare>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int T_Id
	{
		get
		{
			return this._T_Id;
		}
		set
		{
			if ((this._T_Id != value))
			{
				this.OnT_IdChanging(value);
				this.SendPropertyChanging();
				this._T_Id = value;
				this.SendPropertyChanged("T_Id");
				this.OnT_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TildbudPct", DbType="Int NOT NULL")]
	public int TildbudPct
	{
		get
		{
			return this._TildbudPct;
		}
		set
		{
			if ((this._TildbudPct != value))
			{
				this.OnTildbudPctChanging(value);
				this.SendPropertyChanging();
				this._TildbudPct = value;
				this.SendPropertyChanged("TildbudPct");
				this.OnTildbudPctChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fk_VareId", DbType="Int NOT NULL")]
	public int Fk_VareId
	{
		get
		{
			return this._Fk_VareId;
		}
		set
		{
			if ((this._Fk_VareId != value))
			{
				if (this._Vare.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFk_VareIdChanging(value);
				this.SendPropertyChanging();
				this._Fk_VareId = value;
				this.SendPropertyChanged("Fk_VareId");
				this.OnFk_VareIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlutDato", DbType="Date NOT NULL")]
	public System.DateTime SlutDato
	{
		get
		{
			return this._SlutDato;
		}
		set
		{
			if ((this._SlutDato != value))
			{
				this.OnSlutDatoChanging(value);
				this.SendPropertyChanging();
				this._SlutDato = value;
				this.SendPropertyChanged("SlutDato");
				this.OnSlutDatoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDato", DbType="Date NOT NULL")]
	public System.DateTime StartDato
	{
		get
		{
			return this._StartDato;
		}
		set
		{
			if ((this._StartDato != value))
			{
				this.OnStartDatoChanging(value);
				this.SendPropertyChanging();
				this._StartDato = value;
				this.SendPropertyChanged("StartDato");
				this.OnStartDatoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vare_Tilbud", Storage="_Vare", ThisKey="Fk_VareId", OtherKey="V_Id", IsForeignKey=true)]
	public Vare Vare
	{
		get
		{
			return this._Vare.Entity;
		}
		set
		{
			Vare previousValue = this._Vare.Entity;
			if (((previousValue != value) 
						|| (this._Vare.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Vare.Entity = null;
					previousValue.Tilbuds.Remove(this);
				}
				this._Vare.Entity = value;
				if ((value != null))
				{
					value.Tilbuds.Add(this);
					this._Fk_VareId = value.V_Id;
				}
				else
				{
					this._Fk_VareId = default(int);
				}
				this.SendPropertyChanged("Vare");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
